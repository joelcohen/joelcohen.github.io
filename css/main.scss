---
# Only the main Sass file needs front matter (the dashes are enough)
---
@charset "utf-8";

// Our variables
$base-font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
$serif : "Baskerville", "Libre Baskerville", Times, serif;
$serif-title : "Georgia", Times, serif;
$base-font-size:   16px;
$base-font-weight: 400;
$small-font-size:  $base-font-size * 0.875;
$base-line-height: 1.5;

$spacing-unit:     30px;

$text-color:       #111;
$background-color: #fdfdfd;
$brand-color:      #2a7ae2;
$accent-color: #26f;
$code-color :      #06c;
$sol-color : #333;


$grey-color:       #828282;
$grey-color-light: lighten($grey-color, 40%);
$grey-color-dark:  darken($grey-color, 25%);

// Width of the content area
$content-width:    800px;

$on-palm:          600px;
$on-laptop:        800px;

// Minima also includes a mixin for defining media queries.
// Use media queries like this:
// @include media-query($on-palm) {
//     .wrapper {
//         padding-right: $spacing-unit / 2;
//         padding-left: $spacing-unit / 2;
//     }
// }



// Import partials from the `minima` theme.
@import "minima";

code.highlighter-rouge {
    background-color : $background-color;
    border : 0;
    font-size : 1.05em;
    color : $code-color;
}


.exobox {
    //border : 1px solid #ccc;
    //font-family : $serif;
    //border-radius : .5em;
    //background-color : #f6f9ff;
    padding : .2em 1em;
    margin-top : 0;
    margin-bottom : 1em;
}
.exo {
    
    li {
        margin : 0;
    }
    li + li {
        margin : 1em 0;
    }
    h2 {
        //font-family: "Baskerville", serif;
        font-size : 1.5em;
        font-weight: 300;
        margin-top : 1em;
        margin-bottom: .3em;
        //font-family: $serif;
    }
    .inlineblock {
        display : inline-block;
        margin : 1em 2em;
    }
    .inlineblock + .inlineblock {
        //margin : 1em;
    }
}


.titlebox {
    text-align : center;
    margin-top : 7em;
    margin-bottom : 5em;
    h1 {
        //font-family : $serif;
        font-size : 2em;
        font-weight : bold;
        line-height : 1em;
        margin : 0;
    }
    h2 {
        font-size : 1.5em;
        color : $brand-color;
        line-height : 1em;
        margin: 0;
        font-weight : lighter;
        //letter-spacing : .02em;
    }
}
.exomath {
    //font-family : $serif;
    line-height: 1.6em;
    h1, h2, h3, h4, h5, h6 {
        font-weight : bold;
        //letter-spacing : -.05em;
        //font-family : $serif-title;
    }
    .sol {
        display: none;
        background-color : #f9f9f9;
        border : 1px solid #f0f0f0;
        border-radius: .5em;
        padding : 1.5em 2em;
        margin : 1em 0;
        //color: $sol-color;
    } 
}
.new {
    color : $brand-color;
}

@media print {
    h1 {
        text-align : center;
        margin-top : 1em;
        margin-bottom : 2em;
    }
    
    header, footer {
        display : none;
    }
    .highlight pre {
        border : none;
        background-color: #fff;
    }
    .inline {
        border : none;
        color : $code-color;
    }
    .exomath {
        font-size : 11px;
        margin : 0 5em;
    }
    
}


body {
	counter-reset: section;
    counter-reset: article;
}
section {
	counter-increment: section;
    counter-reset: article;
    h2, h3 {
        margin-top : 2em;
    }
    h2::before {
        content : counter(section) ". ";
        @media (min-width: 800px){
            margin-left : -1em;
        }
    }
}

article.definition {
    border : 1px solid #ccc;
    background-color : #f9f9f9;
    padding : 1em;
    margin: 1em;
    border-radius : .5em;
}
article.prop {
    border : 1px solid #69f;
    background-color : #f6f9ff;
    padding : 1em;
    margin: 1em;
    border-radius : .5em;
}

article.lemma::before, article.prop::before, article.theorem::before, article.cor::before, article.proof::before, article.definition::before, article.exemple::before {
	font-style : normal;
	font-size : 1em;
	font-weight : bold;
    //font-family: $sans-serif;
	//color : $highlight;
}
article.lemma::before, article.prop::before, article.theorem::before, article.cor::before, article.definition::before, article.exemple::before {
	counter-increment: article;
}
.definition::before {
	content : "Définition " counter(section) "." counter(article) " : ";
}
.lemma::before {
	content : "Lemme " counter(section) "." counter(article) " : ";
}
.proof::before {
	content : "Preuve : ";
}
.proof::after {
	content : " —◼︎";
}
.prop::before {
	content : "Proposition " counter(section) "." counter(article) " : ";
}
.theorem::before {
	content : "Théorème " counter(section) "." counter(article) " : ";
}
.cor::before {
	content : "Corollaire " counter(section) "." counter(article) " : ";
}
.exemple::before {
	content : "Exemple " counter(section) "." counter(article) " : ";
}
